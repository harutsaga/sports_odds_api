version: "3.1"
networks:
  default:
    external:
      name: bet-network

services:
  db:
    image: mysql:5.7
    command: mysqld --default-authentication-plugin=mysql_native_password --max_allowed_packet=32505856 --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - .mysqldb:/var/lib/mysql
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: 'bet_db'
      

  broker:
    image: "redis:alpine"

  result:
    image: "redis:alpine"

  backend:
    build:
      dockerfile: Dockerfile
      context: ./backend
    command: gunicorn sports_odds.wsgi:application --bind 0.0.0.0:8000
    expose:
      - "8000"
    volumes:
      - ./:/home/user/app/
      - ./static/:/home/user/static/
    env_file: .env
    depends_on:
      - db


  daphne:
    build:
      dockerfile: Dockerfile
      context: ./backend
    working_dir: /home/user/app
    command: bash -c "daphne -b 0.0.0.0 -p 9542 sports_odds.asgi:application"
    volumes:
      - ./:/home/user/app/
    env_file: ./.env
    ports:
      - "9542:9542"
    depends_on:
      - broker
      - result
      - backend
    logging:
      driver: none

  celery:
    build:
      dockerfile: Dockerfile
      context: ./backend
    command: celery -A sports_odds worker -l info --pool=gevent --concurrency=500
    volumes:
      - ./:/home/user/app/
    env_file: ./.env
    depends_on:
      - backend
      - broker
      - result

  celery_beat:
    build:
      dockerfile: Dockerfile
      context: ./
    command: celery -A sports_odds beat -l info
    volumes:
      - ./:/home/user/app/
    env_file: ./.env
    depends_on:
      - backend
      - broker
      - result

  nginx:
    build:
      dockerfile: Dockerfile
      context: ./nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - daphne
    volumes:
      - ./:/home/user/app/
      - ./static/:/home/user/staticfiles/
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''

volumes:
  staticfiles:
  appupload: